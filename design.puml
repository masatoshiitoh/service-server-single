@startuml
'https://plantuml.com/sequence-diagram

autonumber

フロント -> アプリ: ログイン
アプリ -> DB: 抽出
DB -> アプリ: 返却
アプリ -> DB: ※もし新規なら生成
DB -> アプリ: ※新規返却
アプリ -> フロント: ログイン結果返却



フロント -> アプリ: チェックイン
アプリ -> DB: 緯度経度から最寄り駅抽出
DB -> アプリ: 返却
アプリ -> DB: 駅に対するアクション実行
DB -> アプリ: 返却
アプリ -> フロント: チェックイン結果返却



フロント -> アプリ: プレイヤー情報取得
アプリ -> DB: 抽出
DB -> アプリ: 返却
アプリ -> フロント: プレイヤー情報返却



フロント -> アプリ: ランキング情報取得
アプリ -> DB: 抽出
DB -> アプリ: 返却
アプリ -> フロント: ランキング情報返却



フロント -> アプリ: initialize
アプリ -> DB: 初期化
DB -> アプリ: 結果返却
アプリ -> フロント: initialize結果返却


/'
さて。コアとしては上記だけなんだけど、これを
事前にベンチマーカー動作として仕込んだ上で、
負荷がかかる程度にはDBを育てておく必要がある。

ああ、並列化できるきがしない！！！ｗ

とりあえず、C#のASP.NETで、基本実装をおこなう。
DBサーバーは、、、なんでもいいけどSQL Serverかな。

ミニマムのISUCONなら、サーバーはシングルサーバーに全部入り、でもいいのかもね。

'/
@enduml
